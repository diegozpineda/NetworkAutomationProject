---
- name: namespace creator
  hosts: localhost
  gather_facts: No

  vars_files:
    - net_datastructure.yml

  tasks:
#    - name: Test print namespace
#      ansible.builtin.debug:
#        msg: "{{ item.get('name') }}"
#      loop: "{{ Network.subnets | from_yaml }}"

#    - name: Create network namespaces
#      community.general.ip_netns:
#        name: "{{ item.get('name') }}"
#      loop: "{{ Network.subnets | from_yaml }}"
#      become: yes

#    - name: Create bridges
#      ansible.builtin.command: ip link add name "{{ item.get('hosts') }}" type bridge
#      when: "{{ item.get('bridge') }}" 
#      loop: "{{ Network.subnets | from_yaml }}"
#      become: yes

    # - name: Enable bridges to UP state
    #   ansible.builtin.command: ip link set dev "{{ item.get('hosts') }}" up
    #   when: "{{ item.get('bridge') }}" 
    #   loop: "{{ Network.subnets | from_yaml }}"
    #   become: yes

    # - name: Capture brctl output
    #   ansible.builtin.command: brctl show
    #   register: command_output

    # - name: Show brctl output
    #   ansible.builtin.debug:
    #     var: command_output.stdout

    - name: "Create Host veth's (host_a and host_b)"
      ansible.builtin.command: ip link add "{{ item.get('hosts') }}"_a type veth peer name "{{ item.get('hosts') }}"_b
      #register: veth_test
      #when: "{{ item.get('bridge') }}"
      when: item.get('hosts') is defined
      loop: "{{ Network.subnets | from_yaml }}"
      become: yes

    - name: "Attach host_a veths to host namespace"
      ansible.builtin.command: ip link set "{{ item.get('hosts') }}"_a netns "{{ item.get('hosts') }}"
      when: item.get('hosts') is defined
      loop: "{{ Network.subnets | from yaml }}"
      become: yes

    - name: "Attach host_b veths to bridge"
      ansible.builtin.command: ip link set dev "{{ item.get('hosts') }}"_b master "{{ item.get('name') }}"-bridge
      when: item.get('hosts') is defined
      loop: "{{ Network.subnets | from yaml }}"
      become: yes