#---
#- name: namespace creator
#  hosts: localhost
#  gather_facts: No
#
#  vars_files:
#    - net_datastructure.yml

  # tasks:

    - name: "Create Router veth's (router_a and router_b)"
      ansible.builtin.command: ip link add "{{ item.get('router') }}"_a type veth peer name "{{ item.get('router') }}"_b
      #register: veth_test
      #when: "{{ item.get('bridge') }}"
      when: 
       - item.get('router') is defined
       - item.get('router') != None
      loop: "{{ Network.subnets | from_yaml }}"
      become: yes

    - name: "Attach router_a veths to router namespace"
      ansible.builtin.command: ip link set "{{ item.get('router') }}"_a netns "{{ item.get('router') }}"
      when: 
       - item.get('router') is defined
       - item.get('router') != None
      loop: "{{ Network.subnets | from_yaml }}"
      become: yes

    - name: "Attach router_b veths to bridge (all except lnd-nat-core)"
      ansible.builtin.command: ip link set dev "{{ item.get('router') }}"_b master "{{ item.get('name') }}"-bridge
      when: 
       - item.get('router') is defined
       - item.get('hosts') != None 
      loop: "{{ Network.subnets | from_yaml }}"
      become: yes

    - name: "Turn up router_b veths (root/controller side)"
      ansible.builtin.command: ip link set dev "{{ item.get('router') }}"_b up 
      when: 
       - item.get('router') is defined
       - item.get('router') != None
      loop: "{{ Network.subnets | from_yaml }}"
      become: yes